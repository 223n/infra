dehydrated_cfg:
  challengetype: dns-01

dehydrated_domains:
  - name: "{{ domain }}"
    domains:
      - "{{ domain }}"
      - "www.{{ domain }}"

dehydrated_auto_execute: yes

dehydrated_hook_initialize: |
  export PROVIDER=cloudflare
  export LEXICON_CLOUDFLARE_USERNAME="{{ lookup('env', 'CLOUDFLARE_EMAIL') }}"
  export LEXICON_CLOUDFLARE_TOKEN="{{ lookup('env', 'CLOUDFLARE_TOKEN') }}"

dehydrated_hook_deploy_challenge: |
  lexicon ${PROVIDER} create ${DOMAIN} TXT --name="_acme-challenge.${DOMAIN}." --content="${TOKEN_VALUE}"
  sleep 30
  systemctl reload nginx

dehydrated_hook_clean_challenge: |
  lexicon ${PROVIDER} delete ${DOMAIN} TXT --name="_acme-challenge.${DOMAIN}." --content="${TOKEN_VALUE}"

nginx_cfg:
  http:
    ssl:
      dhparam: "{{ nginx_dh_key_path }}"

nginx_vhosts:
  - name: default
    default: yes
    server_name: "{{ domain }}"
    access_log: /var/log/nginx/access.log
    error_log: /var/log/nginx/error.log
    document_root: /var/www/html
    includes:
      - conf.d/security.conf
    index:
      - index.html
      - index.htm
      - index.php
    locations:
      - pattern: /
        content: |
          try_files $uri $uri/ /index.php?$query_string;
      - pattern: "\\.php"
        match_type: "~"
        content: |
          fastcgi_pass unix:/var/run/php/php{{ php_default_version }}-fpm.sock;
          include snippets/fastcgi-php.conf;
      - pattern: "/\\.ht"
        match_type: "~"
        content: "deny all;"
    ssl:
      certificate: /var/lib/dehydrated/certs/{{ domain }}/fullchain.pem
      certificate_key:  /var/lib/dehydrated/certs/{{ domain }}/privkey.pem
      hsts: "max-age=15768000;"
      stapling: yes
      stapling_verify: yes
  - name: default_non_ssl
    server_name: "{{ domain }}"
    includes:
      - conf.d/security.conf
      - snippets/redirect_https.conf
  - name: status
    server_name: localhost
    listen: 8080
    access_log: 'off'
    locations:
      - pattern: /nginx_status
        content: |
          stub_status on;
          allow 127.0.0.1;
          deny all;

mackerel_agent_install_agent_plugins: yes

mackerel_agent_cfg:
  plugin:
    metrics:
      nginx: /usr/bin/mackerel-plugin-nginx
